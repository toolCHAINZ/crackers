# This file is autogenerated by maturin v1.8.3
# To update, run
#
#    maturin generate-ci github
#
name: Wheels

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --auditwheel skip
          working-directory: crackers_python
          manylinux: manylinux2_28
          before-script-linux: |
            curl -LsSf https://astral.sh/uv/install.sh | sh
            uv venv
            source .venv/bin/activate
            uv sync
            python3 gh_actions_setup.py ${{ matrix.platform.target }}
            if [ -f .z3env ]; then
                # shellcheck disable=SC1091
                . .z3env
                echo "✅ Loaded Z3_SYS_Z3_HEADER from .z3env"
            else
                echo "❌ .z3env not found. Please run the installer script first."
            fi
            export TARGET_SYSROOT=/usr/local/
            export RUSTFLAGS="-C link-arg=-Wl,-rpath,\$ORIGIN/../z3/lib"
          # sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: crackers_python/dist

  #  windows:
  #    runs-on: ${{ matrix.platform.runner }}
  #    strategy:
  #      matrix:
  #        platform:
  #          - runner: windows-latest
  #            target: x64
  #    steps:
  #      - uses: actions/checkout@v4
  #        with:
  #          submodules: true
  #      - name: Install Z3 using Chocolatey
  #        run: |
  #          choco install z3
  #      - name: Set Z3 environment variables
  #        run: |
  #          echo ::set-env name=Z3_INCLUDE_PATH::C:\tools\z3\include
  #          echo ::set-env name=Z3_LIB_PATH::C:\tools\z3\lib
  #      - uses: actions/setup-python@v5
  #        with:
  #          python-version: 3.x
  #          architecture: ${{ matrix.platform.target }}
  #      - name: Build wheels
  #        uses: PyO3/maturin-action@v1
  #        with:
  #          target: ${{ matrix.platform.target }}
  #          args: --release --out dist --find-interpreter
  #          working-directory: crackers_python
  #          # sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
  #        env:
  #          Z3_SYS_Z3_PATH: "C:/Program Files/Z3/include"
  #      - name: Upload wheels
  #        uses: actions/upload-artifact@v4
  #        with:
  #          name: wheels-windows-${{ matrix.platform.target }}
  #          path: crackers_python/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-14
            target: aarch64
        python: [ '3.11', '3.12', '3.13' ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: "Initialize python environment"
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv venv --python ${{matrix.python}}
          source .venv/bin/activate
          uv sync --no-install-project --project crackers_python --active
          export Z3_SYS_Z3_HEADER=$(python crackers_python/find_venv_library_path.py)/z3/include/z3.h
          uv build --project crackers_python --wheel --out-dir dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}-$${{matrix.python}}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: crackers_python
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: crackers_python/dist

#  release:
#    name: Release
#    runs-on: ubuntu-latest
#    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
#    needs: [ linux, linux-arm, macos, sdist ]
#    permissions:
#      # Use to sign the release artifacts
#      id-token: write
#      # Used to upload release artifacts
#      contents: write
#      # Used to generate artifact attestation
#      attestations: write
#    steps:
#      - uses: actions/download-artifact@v4
#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-path: 'wheels-*/*'
#      - name: Publish to PyPI
#        if: ${{ startsWith(github.ref, 'refs/tags/') }}
#        uses: PyO3/maturin-action@v1
#        env:
#          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
#        with:
#          command: upload
#          args: --non-interactive --skip-existing wheels-*/*
#          working-directory: crackers_python
#