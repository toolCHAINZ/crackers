from z3 import z3


class IndirectVarNode: ...


class Instruction: ...


class ModeledBlock: ...


class ModeledInstruction: ...


class PcodeOperation: ...


class SleighContext: ...


class State:
    def __init__(self, jingle: SleighContext) -> State: ...

    def direct_varnode(self, space: str, offset: int, size: int) -> ResolvedVarNode: ...

    def indirect_varnode(self, space: str, pointer: ResolvedVarNode, access_size: int) -> ResolvedVarNode: ...

    def read_varnode(self, varnode: ResolvedVarNode) -> z3.BitVecRef: ...

    def read_register(self, name: str) -> z3.BitVecRef: ...

    def read_ram(self, offset: int, length: int) -> z3.BitVecRef: ...


class ResolvedVarNode:
    def __str__(self): ...
